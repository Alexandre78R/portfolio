name: Compile and push profile APP staging 

on:
  pull_request:
    branches: ["main"]
    types:
      - closed
  workflow_dispatch:

jobs:
  check-build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Vérifier que Docker Compose fonctionne
        run: docker compose version

      - name: Tester le build des services
        run: |
          docker compose -f docker-compose-main.yml build
        continue-on-error: false  # Stoppe le workflow si le build échoue

  check-webhook:
    needs: check-build  # Exécute cette étape seulement si le build a réussi
    runs-on: ubuntu-latest
    steps:
      - name: Vérifier l'accès au webhook
        id: check_webhook
        continue-on-error: true
        run: |
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}\n" ${{ secrets.WEBHOOK_URL_MAIN }})
          echo "Webhook status: $HTTP_STATUS"
          if [[ "$HTTP_STATUS" -ne 200 ]]; then
            echo "Erreur : Le webhook ne répond pas correctement (HTTP $HTTP_STATUS)."
            exit 1
          fi

    #Deactivation due to new Docker Hub conditions
    #   - uses: docker/login-action@v2
    #     name: Login to Docker Hub
    #     with:
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    #   - uses: docker/setup-buildx-action@v2
    #     name: Set up Docker Build
          
    #   - uses: docker/build-push-action@v4
    #     name: Build and push frontend
    #     with:
    #       context: ./frontend
    #       file: ./frontend/Dockerfile
    #       push: true
    #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/main-frontend-portfolio:latest

    #   - uses: docker/build-push-action@v4
    #     name: Build and push backend
    #     with:
    #       context: ./backend
    #       file: ./backend/Dockerfile
    #       push: true
    #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/main-backend-portfolio:latest

  # deployment:
  #   needs: build
  #   runs-on: ubuntu-latest
  #     # send deploiement hook
  #   steps:
  #     - name: Invoke deployment hook
  #       uses: distributhor/workflow-webhook@v3
  #       with:
  #         webhook_url: ${{ secrets.WEBHOOK_URL_MAIN }}
  deployment:
    needs: [check-build, check-webhook]
    runs-on: ubuntu-latest
    steps:
      - name: Invoke deployment hook
        env:
          SECRET_KEY: ${{ secrets.WEBHOOK_SECRET_MAIN }}
        run: |
          PAYLOAD='{"example": "data"}'
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha1 -hmac "$SECRET_KEY" | sed 's/^.* //')
          SIGNATURE="sha1=$SIGNATURE"

          curl -X POST -H "Content-Type: application/json" -H "X-Hub-Signature: $SIGNATURE" -d "$PAYLOAD" ${{ secrets.WEBHOOK_URL_MAIN }}
