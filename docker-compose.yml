services:
  backend:
    build: ./backend
    ports:
      - 4000:4000
    volumes:
      - ./backend/src:/app/src
      
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true 
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
  db:
    image: postgres:15
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - ./.env
    volumes:
      - portfolio-data:/var/lib/postgresql/data
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/app/src
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_IMAGE_URL=http://localhost:8000
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
  # nginx:
  #   image: nginx:1.21.3
  #   depends_on:
  #     - frontend
  #   restart: always
  #   ports:
  #     - ${GATEWAY_PORT:-8000}:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./logs:/var/log/nginx-dev

volumes:
  portfolio-data:
  portfolio-data-test: